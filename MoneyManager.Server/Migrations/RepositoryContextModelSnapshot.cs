// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MoneyManager.Server.Repository;

#nullable disable

namespace MoneyManager.Server.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    partial class RepositoryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.27")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MoneyManager.Server.Entities.Models.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b11d4c05-49b6-410c-bc78-2d54a9991870"),
                            Name = "Food and Beverage",
                            Type = -1
                        },
                        new
                        {
                            Id = new Guid("b10d4c05-49b6-410c-bc78-2d54a9991870"),
                            Name = "Salary",
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("223d9e18-0cff-4d16-8388-a25e32563e7d"),
                            Name = "Incoming Transfer",
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("4a858dc4-1a14-446c-b35b-fb5191b22f54"),
                            Name = "Outgoing Transfer",
                            Type = -1
                        },
                        new
                        {
                            Id = new Guid("0e9bccba-2b85-43e0-b096-3b798c6b28de"),
                            Name = "Transfer to wallet",
                            Type = -2
                        },
                        new
                        {
                            Id = new Guid("8b84d87b-5cc7-44af-b461-e6ccd55b916a"),
                            Name = "Receive from wallet",
                            Type = 2
                        },
                        new
                        {
                            Id = new Guid("d10d4c05-49b6-410c-bc78-2d54a9991870"),
                            Name = "Transfer to friend",
                            Type = -3
                        },
                        new
                        {
                            Id = new Guid("d11d4c05-49b6-410c-bc78-2d54a9991870"),
                            Name = "Receive from friend",
                            Type = 3
                        });
                });

            modelBuilder.Entity("MoneyManager.Server.Entities.Models.Friendship", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FriendId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "FriendId");

                    b.HasIndex("FriendId");

                    b.ToTable("Friendships");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("c9d4c053-49b6-410c-bc78-2d54a9991870"),
                            FriendId = new Guid("3d490a70-94ce-4d15-9494-5248280c2ce3")
                        });
                });

            modelBuilder.Entity("MoneyManager.Server.Entities.Models.Transaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("TransferredUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TransferredWalletId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("WalletId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CreatorId");

                    b.HasIndex("TransferredUserId");

                    b.HasIndex("TransferredWalletId");

                    b.HasIndex("WalletId");

                    b.ToTable("Transactions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4a07904d-65a3-4d0b-b908-b2f375ddc82b"),
                            Amount = -200000m,
                            CategoryId = new Guid("b11d4c05-49b6-410c-bc78-2d54a9991870"),
                            CreatorId = new Guid("c9d4c053-49b6-410c-bc78-2d54a9991870"),
                            Date = new DateTime(2024, 3, 6, 16, 11, 57, 180, DateTimeKind.Local).AddTicks(1833),
                            Note = "first trans",
                            WalletId = new Guid("a10d4c05-49b6-410c-bc78-2d54a9991870")
                        },
                        new
                        {
                            Id = new Guid("cf9ddca2-02e0-4403-9d4f-12b4e3c6c739"),
                            Amount = 400000m,
                            CategoryId = new Guid("b10d4c05-49b6-410c-bc78-2d54a9991870"),
                            CreatorId = new Guid("c9d4c053-49b6-410c-bc78-2d54a9991870"),
                            Date = new DateTime(2024, 3, 6, 16, 11, 57, 180, DateTimeKind.Local).AddTicks(1837),
                            Note = "second trans",
                            WalletId = new Guid("a10d4c05-49b6-410c-bc78-2d54a9991870")
                        },
                        new
                        {
                            Id = new Guid("9082a3c8-da0c-4715-acca-7bc230d44e4a"),
                            Amount = 200000m,
                            CategoryId = new Guid("d11d4c05-49b6-410c-bc78-2d54a9991870"),
                            CreatorId = new Guid("c9d4c053-49b6-410c-bc78-2d54a9991870"),
                            Date = new DateTime(2024, 3, 6, 16, 11, 57, 180, DateTimeKind.Local).AddTicks(1849),
                            WalletId = new Guid("a11d4c05-49b6-410c-bc78-2d54a9991870")
                        },
                        new
                        {
                            Id = new Guid("c9cfa872-433d-47fa-9f5a-abbd27f7a2df"),
                            Amount = -200000m,
                            CategoryId = new Guid("d10d4c05-49b6-410c-bc78-2d54a9991870"),
                            CreatorId = new Guid("3d490a70-94ce-4d15-9494-5248280c2ce3"),
                            Date = new DateTime(2024, 3, 6, 16, 11, 57, 180, DateTimeKind.Local).AddTicks(1852),
                            TransferredUserId = new Guid("c9d4c053-49b6-410c-bc78-2d54a9991870"),
                            WalletId = new Guid("a11d4c05-49b6-410c-bc78-2d54a9991870")
                        });
                });

            modelBuilder.Entity("MoneyManager.Server.Entities.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c9d4c053-49b6-410c-bc78-2d54a9991870"),
                            Avatar = "",
                            BirthDate = new DateTime(2024, 3, 6, 16, 11, 57, 180, DateTimeKind.Local).AddTicks(1448),
                            Email = "user1@gmail.com",
                            Name = "User1",
                            Password = "Password"
                        },
                        new
                        {
                            Id = new Guid("3d490a70-94ce-4d15-9494-5248280c2ce3"),
                            Avatar = "",
                            BirthDate = new DateTime(2024, 3, 6, 16, 11, 57, 180, DateTimeKind.Local).AddTicks(1461),
                            Email = "user2@gmail.com",
                            Name = "User2",
                            Password = "Password"
                        },
                        new
                        {
                            Id = new Guid("7fb7c5fa-9477-4275-8157-66874fcc18af"),
                            Avatar = "",
                            BirthDate = new DateTime(2024, 3, 6, 16, 11, 57, 180, DateTimeKind.Local).AddTicks(1487),
                            Email = "user3@gmail.com",
                            Name = "User3",
                            Password = "Password"
                        });
                });

            modelBuilder.Entity("MoneyManager.Server.Entities.Models.UserWallet", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("WalletId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsOwner")
                        .HasColumnType("bit");

                    b.HasKey("UserId", "WalletId");

                    b.HasIndex("WalletId");

                    b.ToTable("UserWallets");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("c9d4c053-49b6-410c-bc78-2d54a9991870"),
                            WalletId = new Guid("a10d4c05-49b6-410c-bc78-2d54a9991870"),
                            Balance = 200000m,
                            IsOwner = true
                        },
                        new
                        {
                            UserId = new Guid("c9d4c053-49b6-410c-bc78-2d54a9991870"),
                            WalletId = new Guid("a11d4c05-49b6-410c-bc78-2d54a9991870"),
                            Balance = 200000m,
                            IsOwner = true
                        },
                        new
                        {
                            UserId = new Guid("3d490a70-94ce-4d15-9494-5248280c2ce3"),
                            WalletId = new Guid("a11d4c05-49b6-410c-bc78-2d54a9991870"),
                            Balance = -200000m,
                            IsOwner = false
                        });
                });

            modelBuilder.Entity("MoneyManager.Server.Entities.Models.Wallet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("InitBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Wallets");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a10d4c05-49b6-410c-bc78-2d54a9991870"),
                            Balance = 200000m,
                            InitBalance = 0m,
                            Name = "Wallet1"
                        },
                        new
                        {
                            Id = new Guid("a11d4c05-49b6-410c-bc78-2d54a9991870"),
                            Balance = 0m,
                            InitBalance = 0m,
                            Name = "WalletWithUser2"
                        });
                });

            modelBuilder.Entity("MoneyManager.Server.Entities.Models.Friendship", b =>
                {
                    b.HasOne("MoneyManager.Server.Entities.Models.User", "Friend")
                        .WithMany("InvitedFriendships")
                        .HasForeignKey("FriendId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MoneyManager.Server.Entities.Models.User", "User")
                        .WithMany("Friendships")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Friend");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MoneyManager.Server.Entities.Models.Transaction", b =>
                {
                    b.HasOne("MoneyManager.Server.Entities.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MoneyManager.Server.Entities.Models.User", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MoneyManager.Server.Entities.Models.User", "TransferredUser")
                        .WithMany()
                        .HasForeignKey("TransferredUserId");

                    b.HasOne("MoneyManager.Server.Entities.Models.Wallet", "TransferredWallet")
                        .WithMany("IncomingTransactions")
                        .HasForeignKey("TransferredWalletId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("MoneyManager.Server.Entities.Models.Wallet", "Wallet")
                        .WithMany("Transactions")
                        .HasForeignKey("WalletId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Creator");

                    b.Navigation("TransferredUser");

                    b.Navigation("TransferredWallet");

                    b.Navigation("Wallet");
                });

            modelBuilder.Entity("MoneyManager.Server.Entities.Models.UserWallet", b =>
                {
                    b.HasOne("MoneyManager.Server.Entities.Models.User", "User")
                        .WithMany("UserWallets")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MoneyManager.Server.Entities.Models.Wallet", "Wallet")
                        .WithMany("UserWallets")
                        .HasForeignKey("WalletId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");

                    b.Navigation("Wallet");
                });

            modelBuilder.Entity("MoneyManager.Server.Entities.Models.User", b =>
                {
                    b.Navigation("Friendships");

                    b.Navigation("InvitedFriendships");

                    b.Navigation("UserWallets");
                });

            modelBuilder.Entity("MoneyManager.Server.Entities.Models.Wallet", b =>
                {
                    b.Navigation("IncomingTransactions");

                    b.Navigation("Transactions");

                    b.Navigation("UserWallets");
                });
#pragma warning restore 612, 618
        }
    }
}
